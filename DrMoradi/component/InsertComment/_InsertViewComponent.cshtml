@using Core.Dto.ViewModel.main
@using Domain.Main
@model CommentsViewModel
@functions {
    void RenderComments(IEnumerable<Comment> comments, int? parentId = null, int level = 0)
    {
        var children = comments
            .Where(c => c.ParentId == parentId)
            .OrderByDescending(c => c.CreateDate)
            .ToList();

        if (!children.Any()) return;

        <div class="comment-level pe-@(level * 3)">
            @* تو رفتگی برای RTL *@
            @foreach (var comment in children)
            {
                <div class="card mb-3 shadow-sm">
                    <div class="card-body p-3">

                        <div class="d-flex justify-content-between align-items-center mb-2 flex-wrap gap-2">
                            <strong class="text-dark">@comment.Name</strong>
                            <small class="text-muted">@comment.CreateDate.ToString("yyyy/MM/dd HH:mm")</small>
                        </div>

                        <p class="mb-2 text-body text-start">@comment.Text</p>
                        @if(User.Identity.IsAuthenticated)
                        {
                            <a href="javascript:void(0)"
                               class="text-primary small fw-bold text-start"
                            onclick="showReplyForm(@comment.Id, this)">پاسخ</a>
                        }
                        else
                      {
                        <label class="alert alert-danger">
                            برای ثبت نظر وارد پنل کاربری شوید
                            <a href="/SmsLogin" class="btn btn-success">ورود</a>
                        </label>
                    }


                        <!-- محل فرم پاسخ -->
                        <div class="reply-form-container mt-2"></div>

                        <!-- جواب‌ها -->
                        @{
                            RenderComments(comments, comment.Id, level + 1);
                        }
                    </div>
                </div>
            }
        </div>
    }
}

@{
    RenderComments(Model.Comments);
}








    <script>
        function showReplyForm(parentId, link) {
            const existingForm = link.nextElementSibling.querySelector('form');
            if (existingForm) { existingForm.remove(); return; }

            const formHtml = `
                <form method="post" action="//Comments/Add" class="mt-2">
                    <input type="hidden" name="ParentId" value="${parentId}" />
                    <input type="hidden" name="EntityId" value="@Model.EntityId" />
                    <input type="hidden" name="EntityType" value="@Model.EntityType" />
                    <textarea name="Text" class="form-control mb-2" rows="2" placeholder="پاسخ خود را بنویسید..."></textarea>
                    <button type="submit" class="btn btn-sm btn-primary">ارسال پاسخ</button>
                </form>
            `;
            link.nextElementSibling.innerHTML = formHtml;
        }
    </script>
